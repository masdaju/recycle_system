ssh:
  #云端ip
  #SSH隧道端口
  #主机用户名
  #主机密码

remote:
  db:
    # 远程数据库地址
    host: localhost
    # 远程数据库端口
    port: 3306
redis:
  remote:
      port: 7001,7002,7003,7004,7005,7006
      host : localhost
#因为3306端口被本地的MYSQL数据库占用所以绑定到本地3307端口
local:
  redis:
    port: 7001,7002,7003,7004,7005,7006
  bind:
    port: 3307



# Sa-Token 配置
sa-token:
  # Token名称
  token-name: satoken
  # Token有效期
  timeout: 2592000
  #  timeout: 2
  # Token风格
  token-style: tik
  #是否输出Sa-Token日志
  is-log: true
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  #jwt的密钥
  jwt-secret-key: mas%dajusa^da#sdwqs@41$swadd
#  alone-redis:
#    password:
#    database: 0
#    host: 127.0.0.1
#    port: 6379
#文件上传路径

file:
  upload-path: F:\\\upload/\\
#就是个字符串拼接用的数据库用的
upload:
  path: F:/upload/
preview:
  # 配置 Sa-Token 单独使用的 Redis 连接
spring:
  application:
    name: recycleSys
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  #  jackson:   #格式化返回时间 yyyy-MM-dd HH:mm:ss
  #    date-format: yyyy-MM-dd HH:mm:ss
  #    time-zone: GMT+8
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${remote.db.host}:${local.bind.port}/recycle?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
  data:
    # redis配置
    redis:
      cluster:
#        集群主节点
        nodes: ${redis.remote.host}:7001,${redis.remote.host}:7002,${redis.remote.host}:7003
#        max-redirects: 3
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
#      host: 127.0.0.1
#      # Redis服务器连接端口
#      port: 6379
      # Redis服务器连接密码（默认为空）
      # password:
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 200
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0
  cloud:
    sentinel:
      transport:
        dashboard: localhost:9000
        port: 8081

mybatis-plus:
  #  type-aliases-package: pojo
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true
# application.yml
undertow:
  websocket:
    buffer-size: 1024
    region-buffers: 100
    max-idle-buffers: 20
    max-direct-memory: 10485760
logging:
  level:
    org.springframework.data.redis: DEBUG
